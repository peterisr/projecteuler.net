/**
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * The first ten terms would be:
 *     1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *     1: 1
 *     3: 1,3
 *     6: 1,2,3,6
 *    10: 1,2,5,10
 *    15: 1,3,5,15
 *    21: 1,3,7,21
 *    28: 1,2,4,7,14,28
 *
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred divisors?
 *
 * @task 012
 * @answer 76576500
 */
#include "../projecteuler.h"

typedef vector< pair< UI, UI > > VPII;

UI distinctFactorCount(UI n) {
    if (n == 1) {
        return 1;
    }

    VPII factors = getPrimeFactors(n);
    UI distinctFactors = 1;
    FOREACH (iter, factors) {
        distinctFactors *= (iter->second + 1);
    }

    return distinctFactors;
}

UI solve012() {
    UI sum = 1, n = 1, fc;
    while ((fc = distinctFactorCount(sum)) <= 500) {
        //cout << "sum = " << sum << "; n = " << n << " fc = " << fc << endl;
        sum += ++n;
    }

    return sum;
}

int main() {
    cout << solve012();
    return 0;
}
